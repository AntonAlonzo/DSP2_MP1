% ALONZO & SOLIS | CEDISP2 S11 | PROBLEM 3
% Script that that simulates the operation of the digital Î¼-Law companding 
% (12-to-8-bits)

[orig, Fs] = audioread("gutom.wav");

% 12 bit to 8 bit compressor algorithm in decimal
comped = [];
for i = 1:length(orig)
   if abs(orig(i)) >= 0 && abs(orig(i)) <= 2/8 % segments 0 & 1
       comped(i) = orig(i);
   elseif abs(orig(i)) > 2/8 && abs(orig(i)) <= 3/8 % segment 2
       comped(i) = floor(abs(orig(i)/2))*2*sign(orig(i)); % 2:1 compression
   elseif abs(orig(i)) > 3/8  && abs(orig(i)) <= 4/8 % segment 3
       comped(i) = orig(i)/4; % 4:1 compression
   elseif abs(orig(i)) > 4/8 && abs(orig(i)) <= 5/8 % segment 4
       comped(i) = orig(i)/8; % 8:1 compression
   elseif abs(orig(i)) > 5/8 && abs(orig(i)) <= 6/8 % segment 5
       comped(i) = orig(i)/16; % 16:1 compression
   elseif abs(orig(i)) > 6/8 && abs(orig(i)) <= 7/8 % segment 6
       comped(i) = orig(i)/32; % 32:1 compression
   elseif abs(orig(i)) > 7/8 && abs(orig(i)) <= 1 % segment 7
       comped(i) = orig(i)/64; % 64:1 compression
   end
end

% 8-bit to 12-bit expander algorithm in decimal

subplot(3,1,1)
title('Original Speech')
plot(1:length(orig), orig);

subplot(3,1,2)
title('Compressed Signal')
plot(1:length(orig), comped);